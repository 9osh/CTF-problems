from random import *
from secret import flag
from Crypto.Util.number import *


m = bytes_to_long(flag)
p = getPrime(1024)
q = getPrime(1024)
n = p * q
phi = (p - 1) * (q - 1)

while True:
    try:
        K, Q, P = getrandbits(900), getrandbits(50), getrandbits(40)
        Y = K * Q + P
        e = inverse(Y, phi)
        if GCD(Y, phi) == 1:
            break
    except ValueError:
        continue
c = pow(m,e,n)

print(f"n = {n}\ne = {e}\nc = {c}\nQP = {Q^P}")

a = getPrime(256)
b = getPrime(256)
ct = getPrime(256)
kp = K>>256<<256
kt = K - kp
hint = (a * kt + b) % ct


print(f"a = {a}\nb = {b}\nct = {ct}")
print(f"hint = {hint >> 64}")
print(f"kp = {kp}")
print(f"kt = {kt >> 64}" )

'''
n = 13303856899011983632960307882319638637287550432779792007603701106983751876258258048795658350090305467837563627318527545231628416053156415975945196818433676370277283141965954341888806103176166238312378096457083879950701541506765361840788206662319436206601457152594339944176515389512519816615898370162128798168782601890642932984764317007450016645945780381938581704042377883323192832778751432894895603847845606533248604610646973688090589505251553075107051564166403193760651488750826245412068423204034796156843765421320342265009955812200476134570302591703762798597205025078181770729074023303604132413763581028940724047053
e = 2733517162977325316168171866728796033084902904187914379488075721239142722580656245473605622483921568453860073436024032094493176750414721945725534405036772939927287999268479777085171913762833110203454301633868757808443485399661516913959111387656462439998435796234902268408475529868761969365402107153613238260226108864951738479939189489551038436191545122312333617807990694525995038168231022704371131328332275808094810800990404143404473637884482394299488230831809795888381186519555285694029266922792625447331253019632257369630552871013035628858621927646094270019889444050527156845910381295069049755746679380460434044361
c = 1257188899046514997272405325110424564385768024060742063320284255988190007584654784656431260867071493048511123353948069507669503633550848919744874511579443966819136329852114472266216895363699392703786987813179700514033350248365850450092001546491420343429207567685052543332537686663079614502304203291177287727697712338767938071399864090084866741203851028912823360536739689896262852936314757299216155671690262149783045336778852616143194149940631969143394631299410783137418636516190101007126937403728720725015452113538709754534149425438610714702079839102903881751106774919038549406459141819940733821104205463323546057321
QP = 374563570713029
a = 99122984274070362726537021378927027394007193977385990197140215753769750795421
b = 109980476177887671809918999270373802499713895541798303554775830754300928967413
ct = 107507754155219159022820175387994991690395542115681890441982942540734100538841
hint = 4003137201644984429135979790277666488437115932866581847838
kp = 7184356853939910548131241595220948851978680431483401537207787860047928595973775242115057099194568802207740239839134611884070301385515936096797317313765187937716505251256116706827496362883360670296901928436254026774384214648582578725974699293753323212294005332698430701568
kt = 2000588514863262877141025511928564790205362046489313378420
'''